AWSTemplateFormatVersion: 2010-09-09

Parameters:

  EnumWeb1:

   Description: Aws::Ec2:Instace

   Type: String

   Default: t2.micro

  EnumWeb2:

   Description: Aws::Ec2:Instace

   Type: String

   Default: m5.2xlarge

  EnumWeb3:

   Description: Aws::Ec2:Instace

   Type: String

   Default: r4.4xlarge

  EnumWeb4:

   Description: Aws::Ec2:Instace

   Type: String

   Default: m4.4xlarge

  EnumWeb5:

   Description: Aws::Ec2:Instace

   Type: String

   Default: i3.2xlarge

  EnumWeb6:

   Description: Aws::Ec2:Instace

   Type: String

   Default: r4.8xlarge

  EnumWeb7:

   Description: Aws::Ec2:Instace

   Type: String

   Default: m5.2xlarge

  EnumWeb8:

   Description: Aws::Ec2:Instace

   Type: String

   Default: m4.2xlarge

  EnumWeb9:

   Description: Aws::Ec2:Instace

   Type: String

   Default: r4.4xlarge

  EnumWeb10:

   Description: Aws::Ec2:Instace

   Type: String

   Default: r4.2xlarge

  WebServerPort:

    Description: TCP/IP port of the web server.

    Type: Number

    Default: 22

  Username:
    Description: Username to log in to CloudFormer
    Type: String
  Password:
    Description: Password to log in to CloudFormer
    Type: String
    NoEcho: 'true'
  VPCSelection:
    Description: >-
      This setting will control if the Cloudformer Web server will launch in the
      default VPC or if a new VPC will be created, or if you wish to launch into
      an existing non-default VPC.
    Type: String
    Default: CreateNewVPC
    AllowedValues:
      - Default
      - CreateNewVPC
    ConstraintDescription: must be either Default or CreateNewVPC
Conditions:
  DefaultVPC: !Equals 
    - !Ref VPCSelection
    - Default
  CreateNewVPC: !Equals 
    - !Ref VPCSelection
    - CreateNewVPC

Mappings:

  Region2Examples:
    us-east-1:
      Examples: 'https://s3.amazonaws.com/cloudformation-examples-us-east-1'
    us-west-2:
      Examples: 'https://s3-us-west-2.amazonaws.com/cloudformation-examples-us-west-2'
    us-west-1:
      Examples: 'https://s3-us-west-1.amazonaws.com/cloudformation-examples-us-west-1'
    eu-west-1:
      Examples: 'https://s3-eu-west-1.amazonaws.com/cloudformation-examples-eu-west-1'
    eu-central-1:
      Examples: >-
        https://s3-eu-central-1.amazonaws.com/cloudformation-examples-eu-central-1
    ap-southeast-1:
      Examples: >-
        https://s3-ap-southeast-1.amazonaws.com/cloudformation-examples-ap-southeast-1
    ap-northeast-1:
      Examples: >-
        https://s3-ap-northeast-1.amazonaws.com/cloudformation-examples-ap-northeast-1
    ap-southeast-2:
      Examples: >-
        https://s3-ap-southeast-2.amazonaws.com/cloudformation-examples-ap-southeast-2
    ap-northeast-2:
      Examples: >-
        https://s3-ap-northeast-2.amazonaws.com/cloudformation-examples-ap-northeast-2
    ap-northeast-3:
      Examples: >-
        https://s3-ap-northeast-3.amazonaws.com/cloudformation-examples-ap-northeast-3
    ap-south-1:
      Examples: 'https://s3-ap-south-1.amazonaws.com/cloudformation-examples-ap-south-1'
    us-east-2:
      Examples: 'https://s3-us-east-2.amazonaws.com/cloudformation-examples-us-east-2'
    sa-east-1:
      Examples: 'https://s3-sa-east-1.amazonaws.com/cloudformation-examples-sa-east-1'
    cn-north-1:
      Examples: >-
        https://s3.cn-north-1.amazonaws.com.cn/cloudformation-examples-cn-north-1
    cn-northwest-1:
      Examples: >-
        https://s3.cn-northwest-1.amazonaws.com.cn/cloudformation-examples-cn-northwest-1
    ca-central-1:
      Examples: >-
        https://s3-ca-central-1.amazonaws.com/cloudformation-examples-ca-central-1
    eu-west-2:
      Examples: 'https://s3-eu-west-2.amazonaws.com/cloudformation-examples-eu-west-2'
    eu-west-3:
      Examples: 'https://s3-eu-west-3.amazonaws.com/cloudformation-examples-eu-west-3'
  Region2Principal:
    us-east-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-west-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-west-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-southeast-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-southeast-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-3:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-south-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-east-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    sa-east-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    cn-north-1:
      EC2Principal: ec2.amazonaws.com.cn
      OpsWorksPrincipal: opsworks.amazonaws.com.cn
    cn-northwest-1:
      EC2Principal: ec2.amazonaws.com.cn
      OpsWorksPrincipal: opsworks.amazonaws.com.cn
    eu-central-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ca-central-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-3:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
  AWSInstanceType2Arch:
    t1.micro:
      Arch: PV64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: PV64
    m1.medium:
      Arch: PV64
    m1.large:
      Arch: PV64
    m5.2xlarge:
      Arch: PV64
    m5.4xlarge:
      Arch: PV64
    r3.2xlarge:
      Arch: PV64
    r3.4xlarge:
      Arch: PV64
    r3.8xlarge:
      Arch: HVM64
    r4.2xlarge:
      Arch: HVM64
    r4.8xlarge:
      Arch: HVM64
    r4.4xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    c1.medium:
      Arch: PV64
    i2.2xlarge:
      Arch: PV64
    i2.8xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    i3.4xlarge:
      Arch: HVM64
    i3.2xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t1.micro:
      Arch: NATPV64
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
    t2.large:
      Arch: NATHVM64
    m1.small:
      Arch: NATPV64
    m1.medium:
      Arch: NATPV64
    m1.large:
      Arch: NATPV64
    m1.xlarge:
      Arch: NATPV64
    m2.xlarge:
      Arch: NATPV64
    m2.2xlarge:
      Arch: NATPV64
    m2.4xlarge:
      Arch: NATPV64
    m3.medium:
      Arch: NATHVM64
    m3.large:
      Arch: NATHVM64
    m3.xlarge:
      Arch: NATHVM64
    m3.2xlarge:
      Arch: NATHVM64
    m4.large:
      Arch: NATHVM64
    m4.xlarge:
      Arch: NATHVM64
    m4.2xlarge:
      Arch: NATHVM64
    m4.4xlarge:
      Arch: NATHVM64
    m4.10xlarge:
      Arch: NATHVM64
    c1.medium:
      Arch: NATPV64
    c1.xlarge:
      Arch: NATPV64
    c3.large:
      Arch: NATHVM64
    c3.xlarge:
      Arch: NATHVM64
    c3.2xlarge:
      Arch: NATHVM64
    c3.4xlarge:
      Arch: NATHVM64
    c3.8xlarge:
      Arch: NATHVM64
    c4.large:
      Arch: NATHVM64
    c4.xlarge:
      Arch: NATHVM64
    c4.2xlarge:
      Arch: NATHVM64
    c4.4xlarge:
      Arch: NATHVM64
    c4.8xlarge:
      Arch: NATHVM64
    g2.2xlarge:
      Arch: NATHVMG2
    g2.8xlarge:
      Arch: NATHVMG2
    r3.large:
      Arch: NATHVM64
    r3.xlarge:
      Arch: NATHVM64
    r3.2xlarge:
      Arch: NATHVM64
    r3.4xlarge:
      Arch: NATHVM64
    r3.8xlarge:
      Arch: NATHVM64
    i2.xlarge:
      Arch: NATHVM64
    i2.2xlarge:
      Arch: NATHVM64
    i2.4xlarge:
      Arch: NATHVM64
    i2.8xlarge:
      Arch: NATHVM64
    d2.xlarge:
      Arch: NATHVM64
    d2.2xlarge:
      Arch: NATHVM64
    d2.4xlarge:
      Arch: NATHVM64
    d2.8xlarge:
      Arch: NATHVM64
    hi1.4xlarge:
      Arch: NATHVM64
    hs1.8xlarge:
      Arch: NATHVM64
    cr1.8xlarge:
      Arch: NATHVM64
    cc2.8xlarge:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-1:
       PV64: ami-08ae4e9db257b9aeb
       HVM64: ami-08ae4e9db257b9aeb
       HVMG2: ami-08ae4e9db257b9aeb
    us-west-2:
       PV64: ami-051439e39f3ac3a10
       HVM64: ami-051439e39f3ac3a10
       HVMG2: ami-051439e39f3ac3a10
    us-west-1:
       PV64: ami-059f7b46119df7cff
       HVM64: ami-059f7b46119df7cff
       HVMG2: ami-059f7b46119df7cff
    eu-west-1:
       PV64: ami-0373fccb285abf88b
       HVM64: ami-0373fccb285abf88b
       HVMG2: ami-0373fccb285abf88b
    eu-west-2:
       PV64: ami-07f53027e1c5c6e32
       HVM64: ami-07f53027e1c5c6e32
       HVMG2: ami-07f53027e1c5c6e32
    eu-west-3:
       PV64: ami-0d33a81d944d0bb47
       HVM64: ami-0d33a81d944d0bb47
       HVMG2: ami-0d33a81d944d0bb47
    eu-central-1:
       PV64: ami-0610af7af614001be
       HVM64: ami-0610af7af614001be
       HVMG2: ami-0610af7af614001be
    ap-northeast-1:
       PV64: ami-003e99891cdd7c7ee
       HVM64: ami-003e99891cdd7c7ee
       HVMG2: ami-003e99891cdd7c7ee
    ap-northeast-2:
       PV64: ami-0b97bf99b1c041574
       HVM64: ami-0b97bf99b1c041574
       HVMG2: ami-0b97bf99b1c041574
    ap-northeast-3:
       PV64: NOT_SUPPORTED
       HVM64: NOT_SUPPORTED
       HVMG2: NOT_SUPPORTED
    ap-southeast-1:
       PV64: ami-063dc8c653086e595
       HVM64: ami-063dc8c653086e595
       HVMG2: ami-063dc8c653086e595
    ap-southeast-2:
       PV64: ami-0373fccb285abf88b
       HVM64: ami-0373fccb285abf88b
       HVMG2: ami-0373fccb285abf88b
    ap-south-1:
       PV64: ami-056eed61617c29a02
       HVM64: ami-056eed61617c29a02
       HVMG2: ami-056eed61617c29a02
    us-east-2:
       PV64: ami-0c4cc3e0a930883c9
       HVM64: ami-0c4cc3e0a930883c9
       HVMG2: ami-0c4cc3e0a930883c9
    ca-central-1:
       PV64: ami-0931f178b6c6734d8
       HVM64: ami-0931f178b6c6734d8
       HVMG2: ami-0931f178b6c6734d8
    sa-east-1:
       PV64: ami-048978a5c4ed7f0c8
       HVM64: ami-048978a5c4ed7f0c8
       HVMG2: ami-048978a5c4ed7f0c8
Resources:
  WebServerGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'

    Properties:

      AvailabilityZones: !GetAZs ''

      LaunchConfigurationName: !Ref LaunchConfig

      MinSize: '0'

      MaxSize: '10'

      DesiredCapacity: '1'

    Metadata:

      'AWS::CloudFormation::Designer':

        id: 2c22c000-1096-429b-93f4-a4f12567f456

  LaunchConfig:

    Type: 'AWS::AutoScaling::LaunchConfiguration'

    Properties:
    
      ImageId: !FindInMap 

        - AWSRegionArch2AMI

        - !Ref 'AWS::Region'

        - !FindInMap 

          - AWSInstanceType2Arch

          - !Ref EnumWeb1

          - Arch

      UserData: !Base64 

        Ref: WebServerPort

      SecurityGroups:

        - !Ref InstanceSecurityGroup

      InstanceType: !Ref EnumWeb1
  WebServerScaleUpPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WebServerGroup
      Cooldown: '240'
      ScalingAdjustment: '1'
  WebServerScaleDownPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WebServerGroup
      Cooldown: '300'
      ScalingAdjustment: '-1'
  CPUAlarmHigh:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Scale-up if CPU > 70% for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '240'
      EvaluationPeriods: '5'
      Threshold: '70'
      AlarmActions:
        - !Ref WebServerScaleUpPolicy
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref WebServerGroup
      ComparisonOperator: GreaterThanThreshold
  CPUAlarmLow:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Scale-down if CPU < 70% for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '240'
      EvaluationPeriods: '5'
      Threshold: '70'
      AlarmActions:
        - !Ref WebServerScaleDownPolicy
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref WebServerGroup
      ComparisonOperator: LessThanThreshold
  InstanceSecurityGroup:

    Type: 'AWS::EC2::SecurityGroup'

    Properties:

      GroupDescription: Enable SSH access and HTTP from the load balancer only

      SecurityGroupIngress:

        - IpProtocol: tcp

          FromPort: '22'

          ToPort: '22'

        - IpProtocol: tcp

          FromPort: !Ref WebServerPort

          ToPort: !Ref WebServerPort

    Metadata:

      'AWS::CloudFormation::Designer':

        id: 84d912bc-c566-4476-9d65-3baf2390e6a1

  CFNRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: !FindInMap 
                - Region2Principal
                - !Ref 'AWS::Region'
                - EC2Principal
            Action:
              - 'sts:AssumeRole'
      Path: /
  CFNRolePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: CloudFormerPolicy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'autoscaling:Describe*'
              - 'cloudformation:Describe*'
              - 'cloudformation:List*'
              - 'cloudfront:List*'
              - 'cloudFront:Get*'
              - 'cloudtrail:Describe*'
              - 'cloudtrail:Get*'
              - 'cloudwatch:Describe*'
              - 'dynamodb:List*'
              - 'dynamodb:Describe*'
              - 'elasticbeanstalk:Describe*'
              - 'ec2:Describe*'
              - 'elasticloadbalancing:Describe*'
              - 'elasticache:Describe*'
              - 'rds:Describe*'
              - 'rds:List*'
              - 'route53:List*'
              - 'route53:Get*'
              - 's3:List*'
              - 's3:Get*'
              - 's3:PutObject'
              - 'sdb:Get*'
              - 'sdb:List*'
              - 'sns:Get*'
              - 'sns:List*'
              - 'sqs:Get*'
              - 'sqs:List*'
              - 'opsworks:Describe*'
              - 'redshift:Describe*'
              - 'kinesis:Describe*'
              - 'kinesis:List*'
            Resource: '*'
      Roles:
        - !Ref CFNRole
  VPC:
    Condition: CreateNewVPC
    Type: 'AWS::EC2::VPC'
    Properties:
      Tags:
        - Key: Name
          Value: CloudformwerVPC
      CidrBlock: 10.10.10.0/24
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
  VPCSubnet:
    Condition: CreateNewVPC
    Type: 'AWS::EC2::Subnet'
    Properties:
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs 
          Ref: 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: 10.10.10.0/24
  VPCInternetGateway:
    Condition: CreateNewVPC
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  VPCAttachGateway:
    Condition: CreateNewVPC
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref VPCInternetGateway
  VPCRouteTable:
    Condition: CreateNewVPC
    Type: 'AWS::EC2::RouteTable'
    Properties:
      Tags:
        - Key: Name
          Value: CloudformerVPCRouteTable
      VpcId: !Ref VPC
  VPCSubnetRouteTableAssociation:
    Condition: CreateNewVPC
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref VPCSubnet
      RouteTableId: !Ref VPCRouteTable
  RouteVPCAny:
    Condition: CreateNewVPC
    Type: 'AWS::EC2::Route'
    DependsOn: VPCAttachGateway
    Properties:
      RouteTableId: !Ref VPCRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VPCInternetGateway
      
      
